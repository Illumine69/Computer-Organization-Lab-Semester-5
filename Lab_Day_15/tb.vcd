$date
	Fri Nov 10 16:02:24 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 32 ! out [31:0] $end
$var reg 1 " clk $end
$var reg 1 # reset $end
$scope module RISC $end
$var wire 32 $ PC [31:0] $end
$var wire 1 " clk $end
$var wire 1 % interrupt $end
$var wire 1 # reset $end
$var wire 1 & writeReg $end
$var wire 2 ' stackOp [1:0] $end
$var wire 32 ( spOut [31:0] $end
$var wire 5 ) shamt [4:0] $end
$var wire 32 * regWriteData [31:0] $end
$var wire 32 + reg2Data [31:0] $end
$var wire 5 , reg2 [4:0] $end
$var wire 32 - reg1Data [31:0] $end
$var wire 5 . reg1 [4:0] $end
$var wire 6 / opcode [5:0] $end
$var wire 32 0 memWriteData [31:0] $end
$var wire 1 1 memWrite $end
$var wire 1 2 memRegPC $end
$var wire 32 3 memReadData [31:0] $end
$var wire 1 4 memRead $end
$var wire 32 5 memAddr [31:0] $end
$var wire 32 6 ins [31:0] $end
$var wire 32 7 imm_val [31:0] $end
$var wire 1 8 haltOp $end
$var wire 6 9 func [5:0] $end
$var wire 5 : dest_reg [4:0] $end
$var wire 3 ; branch [2:0] $end
$var wire 32 < alu_in2 [31:0] $end
$var wire 32 = alu_in1 [31:0] $end
$var wire 1 > aluSource $end
$var wire 32 ? aluOut [31:0] $end
$var wire 3 @ aluOp [2:0] $end
$var wire 32 A NPC [31:0] $end
$var reg 32 B out [31:0] $end
$scope module ALU $end
$var wire 1 " clk $end
$var wire 32 C inp1 [31:0] $end
$var wire 32 D inp2 [31:0] $end
$var wire 1 # reset $end
$var wire 6 E func [5:0] $end
$var wire 3 F aluOp [2:0] $end
$var wire 4 G aluControlOp [3:0] $end
$var reg 32 H out [31:0] $end
$scope module ACD $end
$var wire 6 I func [5:0] $end
$var wire 3 J aluOp [2:0] $end
$var reg 4 K aluControl [3:0] $end
$upscope $end
$scope module G1 $end
$var wire 32 L n1 [31:0] $end
$var wire 32 M n2 [31:0] $end
$var wire 32 N sum [31:0] $end
$upscope $end
$scope module G2 $end
$var wire 32 O n1 [31:0] $end
$var wire 32 P n2 [31:0] $end
$var wire 32 Q diff [31:0] $end
$upscope $end
$scope module G3 $end
$var wire 32 R n1 [31:0] $end
$var wire 32 S n2 [31:0] $end
$var wire 32 T out [31:0] $end
$upscope $end
$scope module G4 $end
$var wire 32 U n1 [31:0] $end
$var wire 32 V n2 [31:0] $end
$var wire 32 W out [31:0] $end
$upscope $end
$scope module G5 $end
$var wire 32 X n1 [31:0] $end
$var wire 32 Y n2 [31:0] $end
$var wire 32 Z out [31:0] $end
$upscope $end
$scope module G6 $end
$var wire 32 [ inp [31:0] $end
$var wire 32 \ out [31:0] $end
$upscope $end
$scope module G7 $end
$var wire 32 ] n1 [31:0] $end
$var wire 32 ^ n2 [31:0] $end
$var wire 32 _ out [31:0] $end
$upscope $end
$scope module G8 $end
$var wire 32 ` n1 [31:0] $end
$var wire 32 a n2 [31:0] $end
$var wire 32 b out [31:0] $end
$upscope $end
$scope module G9 $end
$var wire 32 c n1 [31:0] $end
$var wire 32 d n2 [31:0] $end
$var wire 32 e out [31:0] $end
$upscope $end
$upscope $end
$scope module BM $end
$var wire 32 f aluOut [31:0] $end
$var wire 1 " clk $end
$var wire 32 g pc_in [31:0] $end
$var wire 1 # reset $end
$var wire 32 h reg2Data [31:0] $end
$var wire 3 i branchOp [2:0] $end
$var reg 32 j pc_out [31:0] $end
$upscope $end
$scope module CU $end
$var wire 1 " clk $end
$var wire 1 % interrupt $end
$var wire 6 k opcode [5:0] $end
$var parameter 6 l ADDI $end
$var parameter 6 m ALU $end
$var parameter 6 n BMI $end
$var parameter 6 o BPL $end
$var parameter 6 p BR $end
$var parameter 6 q BZ $end
$var parameter 6 r CALL $end
$var parameter 6 s HALT $end
$var parameter 6 t LD $end
$var parameter 6 u LDSP $end
$var parameter 6 v MOVE $end
$var parameter 6 w NOP $end
$var parameter 6 x POP $end
$var parameter 6 y PUSH $end
$var parameter 6 z RET $end
$var parameter 6 { SLAI $end
$var parameter 6 | SRAI $end
$var parameter 6 } SRLI $end
$var parameter 6 ~ ST $end
$var parameter 6 !" STSP $end
$var parameter 6 "" SUBI $end
$var reg 3 #" aluOp [2:0] $end
$var reg 1 > aluSource $end
$var reg 3 $" branch [2:0] $end
$var reg 1 %" current_state $end
$var reg 1 8 haltOp $end
$var reg 1 4 memRead $end
$var reg 1 2 memRegPC $end
$var reg 1 1 memWrite $end
$var reg 5 &" micro_clk [4:0] $end
$var reg 2 '" stackOp [1:0] $end
$var reg 1 & writeReg $end
$upscope $end
$scope module DM $end
$var wire 1 4 memRead $end
$var wire 1 1 memWrite $end
$var wire 32 (" writeData [31:0] $end
$var wire 32 )" addr [31:0] $end
$var reg 32 *" readData [31:0] $end
$var integer 32 +" i [31:0] $end
$var integer 32 ," k [31:0] $end
$upscope $end
$scope module ID $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var wire 32 -" instruction [31:0] $end
$var reg 5 ." dest_reg [4:0] $end
$var reg 6 /" func [5:0] $end
$var reg 32 0" imm [31:0] $end
$var reg 6 1" opcode [5:0] $end
$var reg 5 2" reg1 [4:0] $end
$var reg 5 3" reg2 [4:0] $end
$var reg 5 4" shamt [4:0] $end
$upscope $end
$scope module IM $end
$var wire 32 5" pc [31:0] $end
$var reg 32 6" instr [31:0] $end
$upscope $end
$scope module PC_counter $end
$var wire 1 " clk $end
$var wire 1 8 haltOp $end
$var wire 32 7" pc_in [31:0] $end
$var wire 1 # reset $end
$var reg 32 8" pc_out [31:0] $end
$upscope $end
$scope module P_counter $end
$var wire 1 " clk $end
$var wire 1 8 haltOp $end
$var wire 32 9" pc_in [31:0] $end
$var wire 1 # reset $end
$var reg 32 :" pc_out [31:0] $end
$upscope $end
$scope module RB $end
$var wire 1 " clk $end
$var wire 5 ;" reg1Addr [4:0] $end
$var wire 32 <" reg1Data [31:0] $end
$var wire 5 =" reg2Addr [4:0] $end
$var wire 32 >" reg2Data [31:0] $end
$var wire 5 ?" regWrite [4:0] $end
$var wire 32 @" regWriteData [31:0] $end
$var wire 1 # reset $end
$var wire 32 A" spOut [31:0] $end
$var wire 2 B" stackOp [1:0] $end
$var wire 1 & write $end
$var integer 32 C" i [31:0] $end
$upscope $end
$scope module mem_addr_mux $end
$var wire 32 D" aluOut [31:0] $end
$var wire 32 E" pc_in [31:0] $end
$var wire 32 F" sp [31:0] $end
$var wire 2 G" stackOp [1:0] $end
$var reg 32 H" out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 ""
b100001 !"
b11001 ~
b10001 }
b1101 |
b1001 {
b11110 z
b10010 y
b10110 x
b100110 w
b100101 v
b11101 u
b10101 t
b100010 s
b11010 r
b1110 q
b10 p
b1010 o
b110 n
b0 m
b1 l
$end
#0
$dumpvars
bx H"
b0 G"
bx F"
bx E"
bx D"
bx C"
bz B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
b1010 ,"
b10000000000 +"
bx *"
bx )"
bx ("
b0 '"
b0 &"
0%"
b0 $"
b0 #"
bx k
bx j
b0 i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
b1 K
b0 J
bx I
bx H
b1 G
b0 F
bx E
bx D
bx C
bx B
bx A
b0 @
bx ?
0>
bx =
bx <
b0 ;
bx :
bx 9
08
bx 7
bx 6
bx 5
04
bx 3
02
01
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
b0 '
0&
z%
bx $
1#
0"
bx !
$end
#1
b0 5
b0 )"
b0 H"
b0 *
b0 @"
b0 ?
b0 H
b0 f
b0 D"
b1010 ,"
b0 T
b0 W
b0 Z
b11111111111111111111111111111111 \
b100001000000000000000000010 6
b100001000000000000000000010 -"
b100001000000000000000000010 6"
b0 N
b0 Q
b0 _
b0 b
b0 e
b0 <
b0 D
b0 M
b0 P
b0 S
b0 V
b0 Y
b0 ^
b0 a
b0 d
b0 0
b0 ("
b0 =
b0 C
b0 L
b0 O
b0 R
b0 U
b0 X
b0 [
b0 ]
b0 `
b0 c
b0 $
b0 g
b0 5"
b0 E"
b0 :"
b0 7
b0 0"
b0 9
b0 E
b0 I
b0 /"
b0 )
b0 4"
b0 :
b0 ."
b0 ?"
b0 +
b0 h
b0 >"
b0 ,
b0 3"
b0 ="
b0 -
b0 <"
b0 .
b0 2"
b0 ;"
b0 /
b0 k
b0 1"
b0 (
b0 A"
b0 F"
18
1%"
b0 8"
b0 A
b0 j
b0 7"
b0 9"
1"
#2
0"
0#
#3
b1010 ,"
b10 5
b10 )"
b10 H"
b10 *
b10 @"
b10 ?
b10 H
b10 f
b10 D"
b1 A
b1 j
b1 7"
b1 9"
b1 &"
b10 @
b10 F
b10 J
b10 #"
b1 ,
b1 3"
b1 ="
b10 W
b10 Z
b10 N
b11111111111111111111111111111110 Q
b10 <
b10 D
b10 M
b10 P
b10 S
b10 V
b10 Y
b10 ^
b10 a
b10 d
b100000 C"
b1 :
b1 ."
b1 ?"
b10 7
b10 0"
b10 9
b10 E
b10 I
b10 /"
b0 .
b0 2"
b0 ;"
b1 /
b1 k
b1 1"
1"
#4
0"
#5
b10 &"
1&
b1 :
b1 ."
b1 ?"
b1 ,
b1 3"
b1 ="
b0 .
b0 2"
b0 ;"
b100000 C"
1"
#6
0"
#7
b1010 ,"
b10 0
b10 ("
b0 &"
0%"
08
0&
b10 +
b10 h
b10 >"
b100000 C"
b1 :
b1 ."
b1 ?"
b1 ,
b1 3"
b1 ="
b0 .
b0 2"
b0 ;"
1"
#8
0"
#9
b10 5
b10 )"
b10 H"
b10 *
b10 @"
b10100010000010000000000000001 6
b10100010000010000000000000001 -"
b10100010000010000000000000001 6"
b10 ?
b10 H
b10 f
b10 D"
b1 :"
18
1%"
b1 $
b1 g
b1 5"
b1 E"
b1 8"
b1010 ,"
b0 T
b10 Z
b11111111111111111111111111111111 \
b10 0
b10 ("
b10 N
b11111111111111111111111111111110 Q
b0 _
b0 =
b0 C
b0 L
b0 O
b0 R
b0 U
b0 X
b0 [
b0 ]
b0 `
b0 c
b1 :
b1 ."
b1 ?"
b10 +
b10 h
b10 >"
b1 ,
b1 3"
b1 ="
b0 -
b0 <"
b0 .
b0 2"
b0 ;"
b100000 C"
1"
#10
0"
#11
b10 G
b10 K
b11111111111111111111111111111101 \
b1010 ,"
b1 5
b1 )"
b1 H"
b1 *
b1 @"
b100 _
b1 b
b1 e
b10 =
b10 C
b10 L
b10 O
b10 R
b10 U
b10 X
b10 [
b10 ]
b10 `
b10 c
b0 0
b0 ("
b1 ?
b1 H
b1 f
b1 D"
b10 A
b10 j
b10 7"
b10 9"
b1 &"
b11 @
b11 F
b11 J
b11 #"
b10 -
b10 <"
b0 +
b0 h
b0 >"
b10 ,
b10 3"
b10 ="
b11 W
b11 Z
b11 N
b1 Q
b1 <
b1 D
b1 M
b1 P
b1 S
b1 V
b1 Y
b1 ^
b1 a
b1 d
b100000 C"
b1 7
b1 0"
b1 9
b1 E
b1 I
b1 /"
b10 :
b10 ."
b10 ?"
b1 .
b1 2"
b1 ;"
b101 /
b101 k
b101 1"
1"
#12
0"
#13
b1 5
b1 )"
b1 H"
b1 *
b1 @"
b1 ?
b1 H
b1 f
b1 D"
b10 &"
1&
b1010 ,"
b11 W
b11 Z
b11111111111111111111111111111101 \
b0 0
b0 ("
b11 N
b1 Q
b100 _
b1 b
b1 e
b10 =
b10 C
b10 L
b10 O
b10 R
b10 U
b10 X
b10 [
b10 ]
b10 `
b10 c
b10 :
b10 ."
b10 ?"
b0 +
b0 h
b0 >"
b10 ,
b10 3"
b10 ="
b10 -
b10 <"
b1 .
b1 2"
b1 ;"
b100000 C"
1"
#14
0"
#15
b1 5
b1 )"
b1 H"
b1 *
b1 @"
b1 ?
b1 H
b1 f
b1 D"
b0 &"
0%"
08
0&
b1010 ,"
b11 W
b11 Z
b11111111111111111111111111111101 \
b1 0
b1 ("
b11 N
b1 Q
b100 _
b1 b
b1 e
b10 =
b10 C
b10 L
b10 O
b10 R
b10 U
b10 X
b10 [
b10 ]
b10 `
b10 c
b100000 C"
b10 :
b10 ."
b10 ?"
b1 +
b1 h
b1 >"
b10 ,
b10 3"
b10 ="
b10 -
b10 <"
b1 .
b1 2"
b1 ;"
1"
#16
0"
#17
b1 5
b1 )"
b1 H"
b1 *
b1 @"
b1000100001100000000000 6
b1000100001100000000000 -"
b1000100001100000000000 6"
b1 ?
b1 H
b1 f
b1 D"
b10 :"
18
1%"
b10 $
b10 g
b10 5"
b10 E"
b10 8"
b1010 ,"
b0 T
b11 W
b11 Z
b11111111111111111111111111111101 \
b1 0
b1 ("
b11 N
b1 Q
b100 _
b1 b
b1 e
b10 =
b10 C
b10 L
b10 O
b10 R
b10 U
b10 X
b10 [
b10 ]
b10 `
b10 c
b10 :
b10 ."
b10 ?"
b1 +
b1 h
b1 >"
b10 ,
b10 3"
b10 ="
b10 -
b10 <"
b1 .
b1 2"
b1 ;"
b100000 C"
1"
#18
0"
#19
b1010 ,"
b11 5
b11 )"
b11 H"
b11 *
b11 @"
b1 G
b1 K
b11 ?
b11 H
b11 f
b11 D"
b11 A
b11 j
b11 7"
b11 9"
b1 &"
1>
b0 @
b0 F
b0 J
b0 #"
b11 W
b11 Z
b11 N
b1 Q
b100 _
b1 b
b1 e
b1 <
b1 D
b1 M
b1 P
b1 S
b1 V
b1 Y
b1 ^
b1 a
b1 d
b100000 C"
b1100000000000 7
b1100000000000 0"
b0 9
b0 E
b0 I
b0 /"
b11 :
b11 ."
b11 ?"
b0 /
b0 k
b0 1"
1"
#20
0"
#21
b10 &"
1&
b100000 C"
1"
#22
0"
#23
08
0&
b0 &"
0%"
b100000 C"
1"
#24
0"
#25
b1000000000000000000000000010 6
b1000000000000000000000000010 -"
b1000000000000000000000000010 6"
b11 :"
18
1%"
b11 $
b11 g
b11 5"
b11 E"
b11 8"
b100000 C"
1"
#26
0"
#27
b10 T
b101 5
b101 )"
b101 H"
b101 *
b101 @"
b101 ?
b101 H
b101 f
b101 D"
b100 A
b100 j
b100 7"
b100 9"
b1 &"
b1 ;
b1 i
b1 $"
0>
b1010 ,"
b11 W
b1 Z
b11111111111111111111111111111100 \
b0 0
b0 ("
b10 <
b10 D
b10 M
b10 P
b10 S
b10 V
b10 Y
b10 ^
b10 a
b10 d
b101 N
b1 Q
b1100 _
b0 b
b0 e
b11 =
b11 C
b11 L
b11 O
b11 R
b11 U
b11 X
b11 [
b11 ]
b11 `
b11 c
b100000 C"
b10 7
b10 0"
b10 9
b10 E
b10 I
b10 /"
b0 :
b0 ."
b0 ?"
b0 +
b0 h
b0 >"
b0 ,
b0 3"
b0 ="
b0 -
b0 <"
b0 .
b0 2"
b0 ;"
b10 /
b10 k
b10 1"
1"
#28
0"
#29
b10 &"
b101 A
b101 j
b101 7"
b101 9"
b100000 C"
1"
#30
0"
#31
08
b0 &"
0%"
b100000 C"
1"
#32
0"
#33
b1010 ,"
b111 5
b111 )"
b111 H"
b111 *
b111 @"
b111 ?
b111 H
b111 f
b111 D"
b0 T
b111 W
b111 Z
b11111111111111111111111111111010 \
b111 N
b11 Q
b10100 _
b1 b
b1 e
b101 =
b101 C
b101 L
b101 O
b101 R
b101 U
b101 X
b101 [
b101 ]
b101 `
b101 c
b1010100100000100000000000001000 6
b1010100100000100000000000001000 -"
b1010100100000100000000000001000 6"
b101 :"
18
1%"
b101 $
b101 g
b101 5"
b101 E"
b101 8"
b100000 C"
1"
#34
0"
#35
b11111111111111111111111111111110 \
b1 =
b1 C
b1 L
b1 O
b1 R
b1 U
b1 X
b1 [
b1 ]
b1 `
b1 c
b1001 5
b1001 )"
b1001 H"
b1001 *
b1001 @"
b1001 ?
b1001 H
b1001 f
b1001 D"
b111 A
b111 j
b111 7"
b111 9"
b1 &"
b0 ;
b0 i
b0 $"
b1 -
b1 <"
b1001 W
b1001 Z
b1010 ,"
b1001 N
b11111111111111111111111111111001 Q
b100000000 _
b0 b
b0 e
b1000 <
b1000 D
b1000 M
b1000 P
b1000 S
b1000 V
b1000 Y
b1000 ^
b1000 a
b1000 d
b0 0
b0 ("
b100000 C"
b100 :
b100 ."
b100 ?"
b1000 7
b1000 0"
b1000 9
b1000 E
b1000 I
b1000 /"
b0 +
b0 h
b0 >"
b100 ,
b100 3"
b100 ="
b10 .
b10 2"
b10 ;"
b10101 /
b10101 k
b10101 1"
1"
#36
0"
#37
b1001 3
b1001 *"
b1001 5
b1001 )"
b1001 H"
b1001 *
b1001 @"
b1001 ?
b1001 H
b1001 f
b1001 D"
b10 &"
14
b110 A
b110 j
b110 7"
b110 9"
b1010 ,"
b1001 W
b1001 Z
b11111111111111111111111111111110 \
b0 0
b0 ("
b1001 N
b11111111111111111111111111111001 Q
b100000000 _
b1 =
b1 C
b1 L
b1 O
b1 R
b1 U
b1 X
b1 [
b1 ]
b1 `
b1 c
b100 :
b100 ."
b100 ?"
b0 +
b0 h
b0 >"
b100 ,
b100 3"
b100 ="
b1 -
b1 <"
b10 .
b10 2"
b10 ;"
b100000 C"
1"
#38
0"
#39
b1001 *
b1001 @"
b1001 3
b1001 *"
b1001 5
b1001 )"
b1001 H"
b1001 ?
b1001 H
b1001 f
b1001 D"
b11 &"
12
1&
b1010 ,"
b1001 W
b1001 Z
b11111111111111111111111111111110 \
b0 0
b0 ("
b1001 N
b11111111111111111111111111111001 Q
b100000000 _
b1 =
b1 C
b1 L
b1 O
b1 R
b1 U
b1 X
b1 [
b1 ]
b1 `
b1 c
b100000 C"
b100 :
b100 ."
b100 ?"
b0 +
b0 h
b0 >"
b100 ,
b100 3"
b100 ="
b1 -
b1 <"
b10 .
b10 2"
b10 ;"
1"
#40
0"
#41
b1001 5
b1001 )"
b1001 H"
b1001 *
b1001 @"
b1001 ?
b1001 H
b1001 f
b1001 D"
08
b0 &"
0%"
0&
02
04
b1010 ,"
b1001 W
b1001 Z
b11111111111111111111111111111110 \
b1001 0
b1001 ("
b1001 N
b11111111111111111111111111111001 Q
b100000000 _
b1 =
b1 C
b1 L
b1 O
b1 R
b1 U
b1 X
b1 [
b1 ]
b1 `
b1 c
b100 :
b100 ."
b100 ?"
b1001 +
b1001 h
b1001 >"
b100 ,
b100 3"
b100 ="
b1 -
b1 <"
b10 .
b10 2"
b10 ;"
b100000 C"
1"
#42
0"
#43
b1001 5
b1001 )"
b1001 H"
b1001 *
b1001 @"
b10011000000000000000000000000000 6
b10011000000000000000000000000000 -"
b10011000000000000000000000000000 6"
b1001 ?
b1001 H
b1001 f
b1001 D"
b110 8"
18
1%"
b110 $
b110 g
b110 5"
b110 E"
b110 :"
b1010 ,"
b0 T
b1001 Z
b11111111111111111111111111111110 \
b1001 0
b1001 ("
b1001 N
b11111111111111111111111111111001 Q
b100000000 _
b1 =
b1 C
b1 L
b1 O
b1 R
b1 U
b1 X
b1 [
b1 ]
b1 `
b1 c
b100000 C"
b100 :
b100 ."
b100 ?"
b1001 +
b1001 h
b1001 >"
b100 ,
b100 3"
b100 ="
b1 -
b1 <"
b10 .
b10 2"
b10 ;"
1"
#44
0"
#45
b0 5
b0 )"
b0 H"
b0 *
b0 @"
b0 ?
b0 H
b0 f
b0 D"
b1 &"
b111 A
b111 j
b111 7"
b111 9"
b1010 ,"
b0 W
b0 Z
b11111111111111111111111111111111 \
b0 <
b0 D
b0 M
b0 P
b0 S
b0 V
b0 Y
b0 ^
b0 a
b0 d
b0 0
b0 ("
b0 N
b0 Q
b0 _
b0 =
b0 C
b0 L
b0 O
b0 R
b0 U
b0 X
b0 [
b0 ]
b0 `
b0 c
b0 7
b0 0"
b0 9
b0 E
b0 I
b0 /"
b0 :
b0 ."
b0 ?"
b0 +
b0 h
b0 >"
b0 ,
b0 3"
b0 ="
b0 -
b0 <"
b0 .
b0 2"
b0 ;"
b100110 /
b100110 k
b100110 1"
b100000 C"
1"
#46
0"
#47
b0 &"
0%"
08
b100000 C"
1"
#48
0"
#49
b1100100010000100000000000000001 6
b1100100010000100000000000000001 -"
b1100100010000100000000000000001 6"
b111 :"
18
1%"
b111 $
b111 g
b111 5"
b111 E"
b111 8"
b100000 C"
1"
#50
0"
#51
b10 5
b10 )"
b10 H"
b10 *
b10 @"
b10 ?
b10 H
b10 f
b10 D"
b1000 A
b1000 j
b1000 7"
b1000 9"
b1 &"
b1010 ,"
b1 T
b1 W
b11111111111111111111111111111110 \
b1 <
b1 D
b1 M
b1 P
b1 S
b1 V
b1 Y
b1 ^
b1 a
b1 d
b1 0
b1 ("
b10 N
b0 Q
b10 _
b0 b
b0 e
b1 =
b1 C
b1 L
b1 O
b1 R
b1 U
b1 X
b1 [
b1 ]
b1 `
b1 c
b100000 C"
b10 :
b10 ."
b10 ?"
b1 7
b1 0"
b1 9
b1 E
b1 I
b1 /"
b1 +
b1 h
b1 >"
b10 ,
b10 3"
b10 ="
b1 -
b1 <"
b10 .
b10 2"
b10 ;"
b11001 /
b11001 k
b11001 1"
1"
#52
0"
#53
b1 3
b1 *"
b1010 ,"
b10 &"
11
14
b10 :
b10 ."
b10 ?"
b100000 C"
1"
#54
0"
#55
b11 &"
b100000 C"
b10 :
b10 ."
b10 ?"
1"
#56
0"
#57
b1010 ,"
0%"
08
01
04
b10 :
b10 ."
b10 ?"
b100000 C"
1"
#58
0"
#59
b10001000000000000000000000000000 6
b10001000000000000000000000000000 -"
b10001000000000000000000000000000 6"
b1000 8"
18
1%"
b1000 $
b1000 g
b1000 5"
b1000 E"
b1000 :"
b100000 C"
b10 :
b10 ."
b10 ?"
1"
#60
0"
#61
b0 5
b0 )"
b0 H"
b0 *
b0 @"
b0 ?
b0 H
b0 f
b0 D"
0%"
08
b1001 A
b1001 j
b1001 7"
b1001 9"
b1010 ,"
b0 T
b0 W
b11111111111111111111111111111111 \
b0 <
b0 D
b0 M
b0 P
b0 S
b0 V
b0 Y
b0 ^
b0 a
b0 d
b0 0
b0 ("
b0 N
b0 Q
b0 _
b0 =
b0 C
b0 L
b0 O
b0 R
b0 U
b0 X
b0 [
b0 ]
b0 `
b0 c
b0 7
b0 0"
b0 9
b0 E
b0 I
b0 /"
b0 :
b0 ."
b0 ?"
b0 +
b0 h
b0 >"
b0 ,
b0 3"
b0 ="
b0 -
b0 <"
b0 .
b0 2"
b0 ;"
b100010 /
b100010 k
b100010 1"
b100000 C"
1"
#62
0"
#63
bx 6
bx -"
bx 6"
b1001 8"
18
1%"
b1001 $
b1001 g
b1001 5"
b1001 E"
b1001 :"
b100000 C"
1"
#64
0"
#65
bx 5
bx )"
bx H"
bx *
bx @"
bx ?
bx H
bx f
bx D"
b1010 A
b1010 j
b1010 7"
b1010 9"
b1010 ,"
bx T
bx W
bx Z
bx \
bx <
bx D
bx M
bx P
bx S
bx V
bx Y
bx ^
bx a
bx d
bx 0
bx ("
bx N
bx Q
bx _
bx b
bx e
bx =
bx C
bx L
bx O
bx R
bx U
bx X
bx [
bx ]
bx `
bx c
bx 7
bx 0"
bx 9
bx E
bx I
bx /"
bx )
bx 4"
bx :
bx ."
bx ?"
bx +
bx h
bx >"
bx ,
bx 3"
bx ="
bx -
bx <"
bx .
bx 2"
bx ;"
bx /
bx k
bx 1"
b100000 C"
1"
#66
0"
#67
b100000 C"
1"
#68
0"
#69
b100000 C"
1"
#70
0"
#71
b100000 C"
1"
#72
0"
#73
b100000 C"
1"
#74
0"
#75
b100000 C"
1"
#76
0"
#77
1"
